@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    Layout = "~/Views/Shared/_Layout.Account.cshtml";
    ViewData["Title"] = "Log in";
}


<p class="login-box-msg">Sign in to start your session</p>

<form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="">
    <div class="form-group">
        <div asp-validation-summary="All" class="text-danger"></div>
    </div>
    <div class="form-group has-feedback">
        <input asp-for="Email" class="form-control" placeholder="Email" />
        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
        <div asp-validation-for="Email" data-valmsg-for="Email" data-valmsg-replace="true" class="text-danger"></div>
    </div>
    <div class="form-group has-feedback">
        <input asp-for="Password" class="form-control" placeholder="Password" />
        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
        <div asp-validation-for="Password" data-valmsg-for="Password" data-valmsg-replace="true" class="text-danger"></div>
    </div>
    <div class="row">
        <div class="col-xs-8">
            <div class="checkbox icheck">
                <label asp-for="RememberMe">
                    <div class="icheckbox_square-blue" aria-checked="false" aria-disabled="false" style="position: relative;">
                        <input asp-for="RememberMe" style="position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;"/>
                        <ins class="iCheck-helper" style="position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;"></ins>
                    </div> @Html.DisplayNameFor(m => m.RememberMe)
                </label>
            </div>
        </div>

        <div class="col-xs-4">
            <button type="submit" class="btn btn-primary btn-block btn-flat">Sign In</button>
        </div>
    </div>
</form>

<div class="social-auth-links text-center">
    <p>- OR -</p>
    @{
        var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
        if (loginProviders.Count > 0)
        {
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">

                @foreach (var provider in loginProviders)
                {
                    var btnClass = string.Empty;
                    var iconClass = string.Empty;

                    switch (provider.DisplayName)
                    {
                        case "Facebook":
                            btnClass = "btn-facebook";
                            iconClass = "fa-facebook";
                            break;
                    }

                    <button type="submit" class="btn btn-block btn-social btn-flat @btnClass" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">
                        <i class="fa @iconClass"></i> Sign in using
                        @provider.AuthenticationScheme
                    </button>
                }
            </form>
        }
    }
</div>

<a asp-action="ForgotPassword">Forgot your password?</a><br>
<a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]" class="text-center">Register as a new user?</a>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
